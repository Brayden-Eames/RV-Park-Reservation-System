@using Microsoft.AspNetCore.Identity
@using ApplicationCore.Models
@using ApplicationCore.Interfaces
@inject SignInManager<Customer> SignInManager
@inject UserManager<Customer> UserManager
@inject IUnitOfWork iUnitOfWork
<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        <li class="nav-item dropdown">
            <a class="nav-link text-light dropdown-toggle" href="#" id="navbarDropDown" data-toggle="dropdown">
                Hello @iUnitOfWork.Customer.Get(c=>c.Email == User.Identity.Name).CustFirstName!</a>
            <div class="dropdown-menu">
                <a class="dropdown-item text-black" asp-area="Identity" asp-page="/Account/Manage/Index">Account</a>
                <a class="dropdown-item text-black" asp-area="Identity" asp-page="/Account/Manage/UpsertQuestions">Security Questions</a>
            </div>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Page("/", new { area = "" })" method="post">
                <button type="submit" class="nav-link btn btn-link text-light">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-light" asp-area="Identity" asp-page="/Account/Login">Login</a>
        </li>
    }
</ul>
