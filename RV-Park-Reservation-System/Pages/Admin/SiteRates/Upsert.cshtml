@page
@model RV_Park_Reservation_System.Pages.Admin.SiteRate.UpsertModel
@{
    ViewData["Title"] = "Manage Site Rate";
}

<form method="post"  asp-action="Upsert" autocomplete="off">
    <div class="container">
        <div class="row px-2 mx-2 border">
            @* All for Model validation and HTML validation *@
            <div asp-validation-summary="All" class="text-danger"></div>
            <div class="col-12 px-3" style="border-bottom:1px solid #325d88">
                <h2 class="text-primary">@(Model.SiteRateObj.SiteRate.RateID != 0 ? "Update" : "Create") Site Rate</h2>
            </div>
            <div class="col-8 pt-3">
                <div class="form-group row">
                    <div class="col-3">
                        <label asp-for="SiteRateObj.SiteRate.RateAmount"></label>
                    </div>
                    <div class="col-9">
                        <input class="form-control" asp-for="SiteRateObj.SiteRate.RateAmount" id="rateAmount" onchange="checkAmount(); ValidateInput();"/>
                        <span class="text-danger" asp-validation-for="SiteRateObj.SiteRate.RateAmount"></span>
                    </div>
                    @if (Model.SiteRateObj.SiteRate.RateID != 0)
                    {
                        <input type="hidden" asp-for="SiteRateObj.SiteRate.RateID" />
                    }
                </div>
                <div class="form-group row">
                    <div class="col-3">
                        <label asp-for="SiteRateObj.SiteRate.RateStartDate"></label>
                    </div>
                    <div class="col-9">
                        @if (Model.SiteRateObj.SiteRate.RateID != 0)
                        {
                            <input asp-for="SiteRateObj.SiteRate.RateStartDate" class="datepicker pb-1 pt-1" placeholder="Start Date" id="startDate" type="datetime" value="@Model.SiteRateObj.SiteRate.RateStartDate" onchange="checkStartDate(); ValidateInput();" />
                        }
                        else
                        {
                            <input asp-for="SiteRateObj.SiteRate.RateStartDate" class="datepicker pb-1 pt-1" placeholder="Start Date" id="startDate" type="datetime" value="" onchange="checkStartDate(); ValidateInput();" />
                        }
                        <span class="text-danger" asp-validation-for="SiteRateObj.SiteRate.RateStartDate"></span>
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-3">
                        <label asp-for="SiteRateObj.SiteRate.RateEndDate"></label>
                    </div>
                    <div class="col-9">
                        @if (Model.SiteRateObj.SiteRate.RateID != 0)
                        {
                            <input asp-for="SiteRateObj.SiteRate.RateEndDate" class="datepicker pb-1 pt-1" placeholder="End Date" id="endDate" type="datetime" value="@Model.SiteRateObj.SiteRate.RateEndDate" onchange="checkEndDate(); ValidateInput();" />
                        }
                        else
                        {
                            <input asp-for="SiteRateObj.SiteRate.RateEndDate" class="datepicker pb-1 pt-1" placeholder="End Date" id="endDate" type="datetime" value="" onchange="checkEndDate(); ValidateInput();" />
                        }
                        <span class="text-danger" asp-validation-for="SiteRateObj.SiteRate.RateEndDate"></span>
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-3">
                        <label asp-for="SiteRateObj.SiteRate.SiteCategoryID"></label>
                    </div>
                    <div class="col-9">
                        @Html.DropDownListFor(c => c.SiteRateObj.SiteRate.SiteCategoryID, Model.SiteRateObj.SiteCategoryList, " - Please select a category - ", new { @class = "form-control", @id = "ddlCategory", @onchange = "ValidateInput();" })
                        <span class="text-danger" asp-validation-for="SiteRateObj.SiteRate.SiteCategoryID"></span>
                    </div>
                </div>
                <div class="form-group row">
                    <div class="col-9 offset-3">
                        <div class="row">
                            <div class="col-6">
                                @if (Model.SiteRateObj.SiteRate.RateID != 0)
                                {
                                    <button type="submit" class="btn btn-primary form-control" id="btnUpdate">Update</button>
                                }
                                else
                                {
                                    <button type="submit" class="btn btn-primary form-control" id="btnCreate" disabled>Create</button>
                                }
                            </div>
                            <div class="col-6">
                                <a asp-page="Index" class="btn btn-success form-control">Back to List</a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</form>

@section Scripts{
    <script>
        $(function () {
            $(".datepicker").datepicker({ minDate: 1, maxDate: "+12M" });
        });

        function checkDates() {
            let bStart = checkStartDate();
            let bEnd = checkEndDate();
            if (bStart && bEnd) {
                var startDate = new Date(document.getElementById('startDate').value);
                var endDate = new Date(document.getElementById('endDate').value);
                if (startDate && endDate) {
                    if (startDate > endDate) {
                        swal('Error', 'Please select an end date that is equal to or past the start date for this site rate', 'error')
                        return false;
                    }
                }
                return true;
            } else {
                return false;
            }
        }

        function checkAmount() {
            if ($('#rateAmount').val() == 0) {
                swal('Error', 'Please enter a site rate.', 'error');
                return false;
            }
        }

        function checkStartDate() {
            console.log(document.getElementById('startDate').value)
            if (!document.getElementById('startDate').value) {
                swal('Error', 'Please select a start date', 'error')
                return false;
            }
            return true;
        }

        function checkEndDate() {
            console.log(document.getElementById('endDate').value)
            if (!document.getElementById('endDate').value) {
                swal('Error', 'Please select an end date', 'error')
                return false;
            }
            return true;
        }

        function ValidateInput() {
            var errors = 0;
            if ($('#ddlCategory option:selected').val() == 0 || $('#ddlCategory option:selected').index == 0) {
                errors++;
                $('#btnUpdate').prop('disabled', true)
                $('#btnCreate').prop('disabled', true)
            }
            let bDates = checkDates();
            if (!bDates) {
                $('#btnUpdate').prop('disabled', true)
                $('#btnCreate').prop('disabled', true)
                errors++;
            }
            if ($('#rateAmount').val() == 0) {
                errors++;
                $('#btnUpdate').prop('disabled', true)
                $('#btnCreate').prop('disabled', true)
            }
            if (errors == 0) {
                $('#btnUpdate').prop('disabled', false)
                $('#btnCreate').prop('disabled', false)
                return true;
            }
            else {
                $('#btnUpdate').prop('disabled', true)
                $('#btnCreate').prop('disabled', true)
                return false;
            }
        }
    </script>
}