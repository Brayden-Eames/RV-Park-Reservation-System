@page
@model RV_Park_Reservation_System.Pages.Admin.Reports.RevenueReportModel
@{
    string file = (string)ViewData["File"];
    ViewData["Title"] = "Revenue Report";
}

<div class="container mb-4">
    <h1 class="display-4 text-center text-primary my-5">REPORTS</h1>

    <div class="row">
        <div class="col-3 col-md-2 d-flex flex-column text-left">
            <a class="btn btn-primary-outline w-100 py-2 text-left" asp-page="/Admin/Reports/CheckInOutReport">Check In/Out</a>
            <a class="btn btn-primary-outline w-100 py-2 text-left" asp-page="/Admin/Reports/NightVacancyReport">Night Vacancy</a>
            <a class="btn btn-primary-outline w-100 py-2 text-left" asp-page="/Admin/Reports/PastReservationsReport">Past Reservations</a>
            <a class="btn btn-primary w-100 py-2 text-left" asp-page="">Revenue <i class="fas fa-angle-right"></i></a>
            <a class="btn btn-primary-outline w-100 py-2 text-left" asp-page="/Admin/Reports/TransactionReport">Transactions</a>
        </div>
        <div class="col-10 px-0">
            <div class="border backgroundWhite container p-3">
                <div class="row">
                    <div class="col-12 col-lg-3">
                        <h4>Revenue</h4>
                    </div>
                    <div class="col-12 col-lg-9">
                        <span class="row">
                            <span class="text-right">
                                <button id="btn_today" class="btn btn-primary mb-1" onclick="setDefaultDaysInInput('today'); generateTransactionData();">Today</button>
                                <button id="btn_tomorrow" class="btn btn-primary mb-1" onclick="setDefaultDaysInInput('week'); generateTransactionData();">Past Week</button>
                                <button id="btn_three" class="btn btn-primary mb-1" onclick="setDefaultDaysInInput('month'); generateTransactionData();">Past 30 Days</button>
                            </span>
                        </span>
                    </div>
                </div>
                <hr />
                <div class="d-inline-flex w-100 align-items-center">
                    <form class="form" method="post" id="revenueForm">
                        <label><b>Filter by date:</b></label>
                        <div class="w-85">
                            <span class="p-1 mr-2">
                                <label class="p-1">From:</label>
                                <input asp-for="startDate" class="datepicker container-fluid pt-1 pb-1 w-25" id="startDate" type="datetime" />
                            </span>

                            <span class="p-1">
                                <label class="p-1">To:</label>
                                <input asp-for="endDate" class="datepicker container-fluid pt-1 pb-1 w-25" id="endDate" type="datetime" />
                            </span>
                            <button type="submit" class="btn btn-primary">Filter</button>
                        </div>
                    </form>
                </div>
                <hr />
                @if (Model.reportVisible)
                {
                    <div>
                        <div class="row align-content-center justify-content-center mb-5">
                            <div>
                                <a href="@Model.downloadPath" class="btn btn-primary w-auto" download>TXT</a>
                                <a onclick="javascript:downloadPDF()" class="btn btn-primary w-auto">PDF</a>
                            </div>
                            <h5 class="my-4 text-center">Date Range: @Model.startDate.ToShortDateString() - @Model.endDate.ToShortDateString()</h5>
                            <div class="col-12 col-md-4 d-flex align-content-center justify-content-center">
                                <div class="card" style="width: 18rem;">
                                    <div class="card-body p-0">
                                        <h5 class="card-title text-white bg-primary text-center p-3">INCOME</h5>
                                        <div class="px-3">
                                            @for (int i = 0; i < Model.IncomeList.Count; i++)
                                            {
                                                <div class="row mb-2 px-3 align-content-center flex-nowrap">
                                                    <h6 class="col-6 m-0">@Model.IncomeList[i].Name: </h6><span class="m-0"> $@Model.IncomeList[i].Amount</span>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-12 col-md-4 d-flex align-content-center justify-content-center">
                                <div class="card" style="width: 18rem;">
                                    <div class="card-body p-0">
                                        <h5 class="card-title text-white bg-primary text-center p-3">REFUNDS</h5>
                                        <div class="px-3">
                                            @for (int i = 0; i < Model.RefundList.Count; i++)
                                            {
                                                <div class="row mb-2 px-3 align-content-center flex-nowrap">
                                                    <h6 class="col-6 m-0">@Model.RefundList[i].Name: </h6><span class="m-0"> $@Model.RefundList[i].Amount</span>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-12 col-md-4 d-flex align-content-center justify-content-center">
                                <div class="card" style="width: 18rem;">
                                    <div class="card-body p-0">
                                        <h5 class="card-title text-white bg-primary text-center p-3">CHARGES</h5>
                                        <div class="px-3">
                                            @for (int i = 0; i < Model.ChargeList.Count; i++)
                                            {
                                                <div class="row mb-2 px-3 align-content-center flex-nowrap">
                                                    <h6 class="col-6 m-0">@Model.ChargeList[i].Name: </h6><span class="m-0"> $@Model.ChargeList[i].Amount</span>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="row align-content-center justify-content-center">
                            <div class="col-12 col-md-4">
                                <div class="card">
                                    <div class="card-body p-0">
                                        <h5 class="card-title text-white bg-primary text-center p-3">SUMMARY</h5>
                                        <div class="px-3">
                                            @for (int i = 0; i < Model.SummaryList.Count; i++)
                                            {
                                                <div class="row mb-2 px-3 align-content-center flex-nowrap">
                                                    <h6 class="col-6 m-0">@Model.SummaryList[i].Name: </h6><span class="m-0"> $@Model.SummaryList[i].Amount</span>
                                                </div>
                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div id="report" style="display:none">
                        <h5>DATE RANGE: @Model.startDate.ToShortDateString() - @Model.endDate.ToShortDateString()</h5>
                        <br />
                        <h5>INCOME:</h5>
                        <p>
                            @for (int i = 0; i < Model.IncomeList.Count; i++)
                            {
                                <div>
                                    <b>@Model.IncomeList[i].Name: </b>$@Model.IncomeList[i].Amount
                                </div>
                            }
                        </p>
                        <br />
                        <br />
                        <h5>REFUNDS:</h5>
                        <p>
                            @for (int i = 0; i < Model.RefundList.Count; i++)
                            {
                                <div>
                                    <b>@Model.RefundList[i].Name: </b>$@Model.RefundList[i].Amount
                                </div>
                            }
                        </p>
                        <br />
                        <br />
                        <h5>CHARGES:</h5>
                        <p>
                            @for (int i = 0; i < Model.ChargeList.Count; i++)
                            {
                                <div>
                                    <b>@Model.ChargeList[i].Name: </b>$@Model.ChargeList[i].Amount
                                </div>
                            }
                        </p>
                        <br />
                        <br />
                        <h5>SUMMARY:</h5>
                        <p>
                            @for (int i = 0; i < Model.SummaryList.Count; i++)
                            {
                                <div>
                                    <b>@Model.SummaryList[i].Name: </b>$@Model.SummaryList[i].Amount
                                </div>
                            }
                        </p>
                    </div>
                    <div id="editor"></div>
                }
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/datatables-buttons/2.0.1/js/dataTables.buttons.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.7.1/jszip.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.2/pdfmake.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.2.2/vfs_fonts.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/datatables.net-buttons/2.0.1/js/buttons.html5.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/datatables.net-buttons/2.0.1/js/buttons.print.min.js"></script>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/1.2.61/jspdf.debug.js"></script>

    <script>
        function downloadPDF() {
            var doc = new jsPDF();
            source = $('#report')[0];
            specialElementHandlers = {
                '#editor': function (element, renderer) {
                    return true
                }
            };
            doc.fromHTML(
                source,
                15,
                15,
                {
                    'width': 170,
                    'elementHandlers': specialElementHandlers
                }
            );
            //doc.text('@file');
            doc.save("report.pdf");
        }

        function leapYear(year) {
            return ((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0);
        }

        function setDefaultDaysInInput(range) {
            let today = new Date();
            let day = today.getDate();
            let month = today.getMonth();
            let year = today.getFullYear();
            let initStartDate = "";
            let initEndDate = "";

            if (range == "default") {
                switch (month) {
                    case 0:
                        initStartDate = year + "-01-01";
                        initEndDate = year + "-01-31";
                        break;
                    case 1:
                        initStartDate = year + "-02-01";
                        if (leapYear(year)) {
                            initEndDate = year + "-02-29";
                        } else {
                            initEndDate = year + "-02-28";
                        }
                        break;
                    case 2:
                        initStartDate = year + "-03-01";
                        initEndDate = year + "-03-31";
                        break;
                    case 3:
                        initStartDate = year + "-04-01";
                        initEndDate = year + "-04-30";
                        break;
                    case 4:
                        initStartDate = year + "-05-01";
                        initEndDate = year + "-05-31";
                        break;
                    case 5:
                        initStartDate = year + "-06-01";
                        initEndDate = year + "-06-30";
                        break;
                    case 6:
                        initStartDate = year + "-07-01";
                        initEndDate = year + "-07-31";
                        break;
                    case 7:
                        initStartDate = year + "-08-01";
                        initEndDate = year + "-08-31";
                        break;
                    case 8:
                        initStartDate = year + "-09-01";
                        initEndDate = year + "-09-30";
                        break;
                    case 9:
                        initStartDate = year + "-10-01";
                        initEndDate = year + "-10-31";
                        break;
                    case 10:
                        initStartDate = year + "-11-01";
                        initEndDate = year + "-11-30";
                        break;
                    case 11:
                        initStartDate = year + "-12-01";
                        initEndDate = year + "-12-31";
                        break;
                }
            } else if (range == "today") {
                initStartDate = year + "-" + (month + 1) + "-" + day;
                initEndDate = year + "-" + (month + 1) + "-" + day;
            } else if (range == "week") {
                initEndDate = year + "-" + (month + 1) + "-" + day;
                let weekEnd = today;
                weekEnd.setDate(today.getDate() - 7);
                console.log(weekEnd);
                initStartDate = year + "-" + (weekEnd.getMonth() + 1) + "-" + weekEnd.getDate();
                console.log(initStartDate)
            } else if (range == "month") {
                initEndDate = year + "-" + (month + 1) + "-" + day;
                let monthEnd = today;
                monthEnd.setDate(today.getDate() - 30);
                initStartDate = year + "-" + (monthEnd.getMonth() + 1) + "-" + monthEnd.getDate();
            }

            document.getElementById('startDate').value = initStartDate;
            document.getElementById('endDate').value = initEndDate;
        }

        window.addEventListener('load', setDefaultDaysInInput('default'));
    </script>
}