@page
@model RV_Park_Reservation_System.Pages.Admin.Sites.DetailModel
@{
    String _month = DateTime.Now.Month.ToString("d2");
    String _year = DateTime.Now.Year.ToString();
    String _date = (_month + "-" + "01" + "-" + _year);
    String _startDate = Convert.ToDateTime(_date).ToString();
    ViewModels.ReservationListVM reservations = Model.ReservationList;
    ViewBag.reservations = Newtonsoft.Json.JsonConvert.SerializeObject(reservations);
    ViewBag.startDate = _startDate;
}

<div class="container mb-4">
    <h1 class="display-4 text-center text-primary my-5">SITE NUMBER @Model.SiteObj.SiteNumber</h1>
    <div class="px-4">
        <p>
            <b>Site Length:</b> @Model.SiteObj.SiteLength <br />
            <b>Site Description:</b> @Model.SiteObj.SiteDescription <br />
            <b>Last Modified Date:</b> @Model.SiteObj.SiteLastModifiedDate <br />
            <b>Last Modified By:</b> @Model.SiteObj.SiteLastModifiedBy <br />
        </p>
        @if (Model.ReservationList.ReservationList.Count == 0)
        {
            <div class="alert alert-warning" role="alert">
                No active or pending reservations for this site.
            </div>
        }
    </div>
    <div id='calendar' class="container p-4"></div>
</div>

@section Scripts{
    <script src='~/js/fullcalendar.js'></script>
    <script>
        $(document).ready(function () {

            var _reservations = @Html.Raw(ViewBag.reservations);
            let eventsArray = [];

            // Add reservations to the calendar
            if (_reservations.ReservationList != null) {
                for (var i = 0; i < _reservations.ReservationList.length; i++) {
                    _reservations.ReservationList[i].ResStartDate = _reservations.ReservationList[i]["ReservationObj"].ResStartDate.substring(0, 10);
                    console.log(_reservations.ReservationList[i]["ReservationObj"].ResStartDate.substring(0, 10))
                    _reservations.ReservationList[i].ResEndDate = _reservations.ReservationList[i]["ReservationObj"].ResEndDate.substring(0, 10);
                    eventsArray.push(
                        {
                            groupId: _reservations.ReservationList[i]["ReservationObj"]["ResID"].toString(),
                            title: "Reservation ID: " + _reservations.ReservationList[i]["ReservationObj"]["ResID"].toString() + ", Customer: " + _reservations.ReservationList[i]["CustomerObj"].CustFirstName + " " + _reservations.ReservationList[i]["CustomerObj"].CustLastName,
                            start: Date.parse(_reservations.ReservationList[i]["ReservationObj"]["ResStartDate"].toString()),
                            end: Date.parse(_reservations.ReservationList[i]["ReservationObj"]["ResEndDate"].toString()),
                            url: '../Reservations/Upsert?id=' + _reservations.ReservationList[i]["ReservationObj"]["ResID"].toString() + "&userId=" + _reservations.ReservationList[i]["ReservationObj"]["Id"].toString()
                        }
                    );
                }
            }

            var calendarEl = document.getElementById('calendar');

            console.log("Calendar");
            var calendar = new FullCalendar.Calendar(calendarEl, {
                initialDate: new Date(Date.parse(_reservations.ReservationList[0]["ReservationObj"]["ResStartDate"].toString())),
                editable: true,
                selectable: true,
                businessHours: true,
                dayMaxEvents: true, // allow "more" link when too many events
                events: eventsArray
            });

            calendar.render();
        })
    </script>
}